name: CI with Tests and Coverage

on: [push, pull_request]

jobs:
  build_and_test:
    name: Build and Test on Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
            cpp_compiler: g++
            coverage: true
          - compiler: clang
            cpp_compiler: clang++
            coverage: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake clang
        sudo apt-get install -y lcov

    - name: Configure CMake
      run: |
        cmake -H. -B build-${{matrix.compiler}} \
          -D CMAKE_CXX_COMPILER=${{matrix.cpp_compiler}} \
          -D CMAKE_C_COMPILER=${{matrix.compiler}} \
          -D BUILD_TESTS=ON \
          -D TESTS_NAME=tests \
          -D ENABLE_COVERAGE=${{matrix.coverage}} \
          -D CMAKE_CXX_FLAGS="${{ matrix.coverage && '--coverage -fprofile-abs-path -fno-inline -fno-inline-small-functions -fno-default-inline' || '' }}" \
          -D CMAKE_EXE_LINKER_FLAGS="${{ matrix.coverage && '--coverage' || '' }}"

    - name: Build project
      run: |
        cmake --build build-${{matrix.compiler}} -- -j$(nproc)

    - name: Run tests
      run: |
        cd build-${{matrix.compiler}}
        ./tests --gtest_output=xml:test_results.xml

    - name: Generate coverage (for GCC)
      if: matrix.coverage
      run: |
        cd build-${{matrix.compiler}}
        
        lcov --capture \
             --directory . \
             --output-file coverage.info \
             --gcov-tool $(which gcov) \
             --ignore-errors unused
        
        lcov --remove coverage.info \
             '/usr/*' \
             '*/test/*' \
             '*/third-party/*' \
             '*/mock/*' \
             '*/googlemock/*' \
             '*/googletest/*' \
             -o filtered.info
        
        lcov --extract filtered.info "*/banking/*" -o source_coverage.info

        genhtml source_coverage.info --output-directory coverage_report
        echo "Coverage report generated"
        lcov --list source_coverage.info

    - name: Upload coverage to Coveralls
      if: matrix.coverage
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: build-${{matrix.compiler}}/source_coverage.info
        parallel: true
        flag-name: gcc-run

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{matrix.compiler}}
        path: build-${{matrix.compiler}}/test_results.xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{matrix.compiler}}
        path: build-${{matrix.compiler}}/coverage_report

  coveralls_finalize:
    name: Coveralls Finalize
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
