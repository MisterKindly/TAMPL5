name: CI with Tests and Coverage

on: [push, pull_request]

jobs:
  build_and_test:
    name: Build and Test on Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
            cpp_compiler: g++
            coverage: true
          - compiler: clang
            cpp_compiler: clang++
            coverage: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake lcov clang
        
        sudo apt-get install -y libperlio-gzip-perl libjson-perl
        wget https://github.com/linux-test-project/lcov/releases/download/v2.0/lcov-2.0.tar.gz
        tar xf lcov-2.0.tar.gz
        sudo make -C lcov-2.0 install

    - name: Configure CMake
      run: |
        cmake -H. -B build-${{matrix.compiler}} \
          -D CMAKE_CXX_COMPILER=${{matrix.cpp_compiler}} \
          -D CMAKE_C_COMPILER=${{matrix.compiler}} \
          -D BUILD_TESTS=ON \
          -D TESTS_NAME=tests \
          -D ENABLE_COVERAGE=${{matrix.coverage}} \
          -D CMAKE_CXX_FLAGS="${{ matrix.coverage && '--coverage -fprofile-abs-path' || '' }}" \
          -D CMAKE_EXE_LINKER_FLAGS="${{ matrix.coverage && '--coverage' || '' }}"

    - name: Build project
      run: |
        cmake --build build-${{matrix.compiler}} -- -j$(nproc)

    - name: Run tests
      run: |
        cd build-${{matrix.compiler}}
        ./tests --gtest_output=xml:test_results.xml

    - name: Generate coverage (for GCC)
      if: matrix.coverage
      run: |
        cd build-${{matrix.compiler}}
        lcov --ignore-errors mismatch --ignore-errors gcov,gcov --capture --directory . -o coverage.info
        lcov --extract coverage.info "*/src/*" -o filtered.info
        lcov --list filtered.info

    - name: Upload coverage
      if: matrix.coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{matrix.compiler}}
        path: build-${{matrix.compiler}}/filtered.info

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{matrix.compiler}}
        path: build-${{matrix.compiler}}/test_results.xml

coverage_report:
  name: Generate Coverage Report
  needs: [build_and_test]
  if: github.ref == 'refs/heads/main'
  runs-on: ubuntu-latest
  steps:
  - name: Checkout repository
    uses: actions/checkout@v4
    with:
      submodules: recursive
      path: src

  - name: Download coverage artifacts
    uses: actions/download-artifact@v4
    with:
      name: coverage-gcc
      path: coverage-data

  - name: Install report dependencies
    run: |
      sudo apt-get update
      sudo apt-get install -y lcov

  - name: Generate HTML report
    run: |
      genhtml coverage-data/filtered.info \
              --output-directory coverage-report \
              --source-directory src \
              --ignore-errors unmapped,source \
              --prefix $(pwd)
    -name: Upload to Coveralls
    uses: coverallsapp/github-action@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      path-to-lcov: coverage-data/filtered.info

  - name: Upload coverage report
    uses: actions/upload-artifact@v4
    with:
      name: coverage-report
      path: coverage-report
